services:
  app:
    build: app
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./app:/app
    # ports:
    #   - 3013:3000
    networks:
      - traefik-net
      - mongo-net
    labels:
      - "traefik.enable=true"

      # Router for HTTP (redirect to HTTPS)
      - "traefik.http.routers.${PROJECT_NAME}.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}.rule=${DOMAINS}"
      # - "traefik.http.routers.${PROJECT_NAME}.middlewares=https-redirect,${PROJECT_NAME}-ratelimit"

      # Router for HTTPS
      - "traefik.http.routers.${PROJECT_NAME}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}-secure.rule=${DOMAINS}"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.${PROJECT_NAME}-secure.middlewares=${PROJECT_NAME}-ratelimit"

      # Service config
      - "traefik.http.services.${PROJECT_NAME}.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-net"

      # Middleware: Rate Limit
      - "traefik.http.middlewares.${PROJECT_NAME}-ratelimit.ratelimit.average=5"
      - "traefik.http.middlewares.${PROJECT_NAME}-ratelimit.ratelimit.period=10s"
      - "traefik.http.middlewares.${PROJECT_NAME}-ratelimit.ratelimit.burst=10"

networks:
  traefik-net:
    external: true
  mongo-net:
    external: true
